{"ast":null,"code":"var _jsxFileName = \"/Users/kiichirosuganuma/Desktop/dev/real-sns/frontend/src/pages/profile/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Profile.css\";\nimport axios from \"axios\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport Timeline from \"../../components/timeline/Timeline\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n\n  // PUBLIC_FOLDER を環境変数から取得\n  const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\n  const [user, setUser] = useState({});\n  const [file, setFile] = useState(null); // useParams を使って URL からユーザー名を取得\n\n  const {\n    username\n  } = useParams(); // ユーザー情報を取得\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await axios.get(`/users?username=${username}`);\n        console.log(\"User data:\", response.data); // デバッグ用\n\n        setUser(response.data);\n      } catch (error) {\n        console.error(\"Error fetching user:\", error.response ? error.response.data : error.message);\n      }\n    };\n\n    fetchUser();\n  }, [username]); // ファイル変更のハンドリング\n\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  }; // ファイルアップロードのハンドリング\n\n\n  const handleUpload = async () => {\n    if (file) {\n      const data = new FormData();\n      data.append(\"file\", file);\n      data.append(\"userId\", user._id);\n\n      try {\n        const res = await axios.post(\"/api/upload/cover\", data);\n        const updatedUser = { ...user,\n          coverPicture: res.data.filename\n        };\n        setUser(updatedUser);\n      } catch (err) {\n        console.error(\"Error uploading file:\", err);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileRight\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"profileCover\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"hello\",\n            children: \"Hi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), console.log(\"PUBLIC_FOLDER:\", PUBLIC_FOLDER), console.log(\"user.coverPicture:\", user.coverPicture), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.coverPicture ? PUBLIC_FOLDER + \"/images/\" + user.coverPicture : PUBLIC_FOLDER + \"/post/3.jpeg\" // デフォルト画像\n            ,\n            alt: \"Profile Cover\",\n            className: \"profileCoverImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpload,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"below\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"profileInfoName\",\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"profileInfoDesc\",\n              children: user.desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileRightBottom\",\n          children: /*#__PURE__*/_jsxDEV(Timeline, {\n            username: username,\n            gridView: true,\n            pageType: \"profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Profile, \"VOjhpEyHImSKJU1QHVDGCq8XyVg=\", false, function () {\n  return [useParams];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/kiichirosuganuma/Desktop/dev/real-sns/frontend/src/pages/profile/Profile.jsx"],"names":["React","useEffect","useState","axios","Topbar","Sidebar","Timeline","useParams","Profile","PUBLIC_FOLDER","process","env","REACT_APP_PUBLIC_FOLDER","user","setUser","file","setFile","username","fetchUser","response","get","console","log","data","error","message","handleFileChange","e","target","files","handleUpload","FormData","append","_id","res","post","updatedUser","coverPicture","filename","err","desc"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Profile.css\";\r\nimport axios from \"axios\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Timeline from \"../../components/timeline/Timeline\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function Profile() {\r\n  // PUBLIC_FOLDER を環境変数から取得\r\n  const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  const [user, setUser] = useState({});\r\n  const [file, setFile] = useState(null);\r\n\r\n  // useParams を使って URL からユーザー名を取得\r\n  const { username } = useParams();\r\n\r\n  // ユーザー情報を取得\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await axios.get(`/users?username=${username}`);\r\n        console.log(\"User data:\", response.data); // デバッグ用\r\n        setUser(response.data);\r\n      } catch (error) {\r\n        console.error(\r\n          \"Error fetching user:\",\r\n          error.response ? error.response.data : error.message\r\n        );\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, [username]);\r\n\r\n  // ファイル変更のハンドリング\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  // ファイルアップロードのハンドリング\r\n  const handleUpload = async () => {\r\n    if (file) {\r\n      const data = new FormData();\r\n      data.append(\"file\", file);\r\n      data.append(\"userId\", user._id);\r\n\r\n      try {\r\n        const res = await axios.post(\"/api/upload/cover\", data);\r\n        const updatedUser = { ...user, coverPicture: res.data.filename };\r\n        setUser(updatedUser);\r\n      } catch (err) {\r\n        console.error(\"Error uploading file:\", err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Topbar />\r\n\r\n      <div className=\"profile\">\r\n        <Sidebar />\r\n        <div className=\"profileRight\">\r\n          <section className=\"profileCover\">\r\n            <h1 className=\"hello\">Hi</h1>\r\n            {/* デバッグ用: PUBLIC_FOLDER と user.coverPicture の確認 */}\r\n            {console.log(\"PUBLIC_FOLDER:\", PUBLIC_FOLDER)}\r\n            {console.log(\"user.coverPicture:\", user.coverPicture)}\r\n\r\n            <img\r\n              src={\r\n                user.coverPicture\r\n                  ? PUBLIC_FOLDER + \"/images/\" + user.coverPicture\r\n                  : PUBLIC_FOLDER + \"/post/3.jpeg\" // デフォルト画像\r\n              }\r\n              alt=\"Profile Cover\"\r\n              className=\"profileCoverImg\"\r\n            />\r\n            <input type=\"file\" onChange={handleFileChange} />\r\n            <button onClick={handleUpload}>Upload</button>\r\n          </section>\r\n\r\n          <section className=\"below\">\r\n            <div className=\"profileInfo\">\r\n              <h4 className=\"profileInfoName\">{user.username}</h4>\r\n              <span className=\"profileInfoDesc\">{user.desc}</span>\r\n            </div>\r\n          </section>\r\n\r\n          <div className=\"profileRightBottom\">\r\n            <Timeline username={username} gridView={true} pageType=\"profile\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}