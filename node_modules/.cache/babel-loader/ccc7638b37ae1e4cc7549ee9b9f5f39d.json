{"ast":null,"code":"var _jsxFileName = \"/Users/kiichirosuganuma/Desktop/dev/real-sns/frontend/src/pages/profile/Profile.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useState } from \"react\";\n// import \"./Profile.css\";\n// import axios from \"axios\";\n// import Topbar from \"../../components/topbar/Topbar\";\n// import Sidebar from \"../../components/sidebar/Sidebar\";\n// import Timeline from \"../../components/timeline/Timeline\";\n// import { useParams } from \"react-router-dom\";\n// export default function Profile() {\n//   const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\n//   const [user, setUser] = useState({});\n//   const [file, setFile] = useState(null);\n//   const { username } = useParams();\n//   useEffect(() => {\n//     const fetchUser = async () => {\n//       try {\n//         const response = await axios.get(`/users?username=${username}`);\n//         setUser(response.data);\n//       } catch (error) {\n//         console.error(\n//           \"Error fetching user:\",\n//           error.response ? error.response.data : error.message\n//         );\n//       }\n//     };\n//     fetchUser();\n//   }, [username]);\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n//   const handleUpload = async () => {\n//     if (file) {\n//       const data = new FormData();\n//       data.append(\"file\", file);\n//       data.append(\"userId\", user._id);\n//       console.log(\"Uploading file for user:\", user._id, file);\n//       try {\n//         const res = await axios.post(\n//           \"http://localhost:8000/api/users/uploadCover\",\n//           data\n//         );\n//         console.log(\"Upload response:\", res.data);\n//         setUser((prev) => ({ ...prev, coverPicture: res.data.filename }));\n//       } catch (err) {\n//         console.error(\"Error uploading file:\", err);\n//       }\n//     }\n//   };\n//   return (\n//     <>\n//       <Topbar />\n//       <div className=\"profile\">\n//         <Sidebar />\n//         <div className=\"profileRight\">\n//           <section className=\"profileCover\">\n//             <h1 className=\"hello\">Hi</h1>\n//             <img\n//               src={\n//                 user.coverPicture\n//                   ? `${PUBLIC_FOLDER}/images/${user.coverPicture}`\n//                   : `${PUBLIC_FOLDER}/post/3.jpeg`\n//               }\n//               alt=\"cover\"\n//               className=\"profileCoverImg\"\n//             />\n//           </section>\n//           <section className=\"below\">\n//             <div className=\"profileInfo\">\n//               <h4 className=\"profileInfoName\">{user.username}</h4>\n//               <span className=\"profileInfoDesc\">{user.desc}</span>\n//             </div>\n//             <input type=\"file\" onChange={handleFileChange} />\n//             <button onClick={handleUpload}>Upload</button>\n//           </section>\n//           <div className=\"profileRightBottom\">\n//             <Timeline username={username} gridView={true} pageType=\"profile\" />\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\nimport React, { useEffect, useState } from \"react\";\nimport \"./Profile.css\";\nimport axios from \"axios\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport Timeline from \"../../components/timeline/Timeline\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n\n  const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\n  const [user, setUser] = useState({});\n  const [file, setFile] = useState(null);\n  const {\n    username\n  } = useParams();\n  const token = \"YOUR_JWT_TOKEN\"; // ここでJWTトークンを取得\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await axios.get(`/api/users?username=${username}`);\n        setUser(response.data);\n        console.log(\"User data fetched:\", response.data);\n      } catch (error) {\n        console.error(\"Error fetching user:\", error.response ? error.response.data : error.message);\n      }\n    };\n\n    fetchUser();\n  }, [username]);\n\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (file) {\n      const data = new FormData();\n      data.append(\"file\", file);\n      data.append(\"userId\", user._id);\n      console.log(\"Uploading file for user:\", user._id, file);\n\n      try {\n        const res = await axios.post(\"http://localhost:8000/api/users/uploadCover\", data, {\n          headers: {\n            token: `Bearer ${token}`\n          }\n        });\n        console.log(\"Upload response:\", res.data);\n        setUser(prev => ({ ...prev,\n          coverPicture: res.data.filename\n        }));\n      } catch (err) {\n        console.error(\"Error uploading file:\", err);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileRight\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"profileCover\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"hello\",\n            children: \"Hi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.coverPicture`${PUBLIC_FOLDER}/images/${user.coverPicture}` // : `${PUBLIC_FOLDER}/post/3.jpeg`\n            ,\n            alt: \"cover\",\n            className: \"profileCoverImg\",\n            onError: e => {\n              console.log(\"Image load error:\", e);\n              e.target.src = `${PUBLIC_FOLDER}/post/3.jpeg`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"below\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"profileInfoName\",\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"profileInfoDesc\",\n              children: user.desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpload,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileRightBottom\",\n          children: /*#__PURE__*/_jsxDEV(Timeline, {\n            username: username,\n            gridView: true,\n            pageType: \"profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Profile, \"VOjhpEyHImSKJU1QHVDGCq8XyVg=\", false, function () {\n  return [useParams];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/kiichirosuganuma/Desktop/dev/real-sns/frontend/src/pages/profile/Profile.jsx"],"names":["React","useEffect","useState","axios","Topbar","Sidebar","Timeline","useParams","Profile","PUBLIC_FOLDER","process","env","REACT_APP_PUBLIC_FOLDER","user","setUser","file","setFile","username","token","fetchUser","response","get","data","console","log","error","message","handleFileChange","e","target","files","handleUpload","FormData","append","_id","res","post","headers","prev","coverPicture","filename","err","src","desc"],"mappings":"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","sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import \"./Profile.css\";\r\n// import axios from \"axios\";\r\n// import Topbar from \"../../components/topbar/Topbar\";\r\n// import Sidebar from \"../../components/sidebar/Sidebar\";\r\n// import Timeline from \"../../components/timeline/Timeline\";\r\n// import { useParams } from \"react-router-dom\";\r\n\r\n// export default function Profile() {\r\n//   const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n//   const [user, setUser] = useState({});\r\n//   const [file, setFile] = useState(null);\r\n\r\n//   const { username } = useParams();\r\n\r\n//   useEffect(() => {\r\n//     const fetchUser = async () => {\r\n//       try {\r\n//         const response = await axios.get(`/users?username=${username}`);\r\n//         setUser(response.data);\r\n//       } catch (error) {\r\n//         console.error(\r\n//           \"Error fetching user:\",\r\n//           error.response ? error.response.data : error.message\r\n//         );\r\n//       }\r\n//     };\r\n//     fetchUser();\r\n//   }, [username]);\r\n\r\n//   const handleFileChange = (e) => {\r\n//     setFile(e.target.files[0]);\r\n//   };\r\n\r\n//   const handleUpload = async () => {\r\n//     if (file) {\r\n//       const data = new FormData();\r\n//       data.append(\"file\", file);\r\n//       data.append(\"userId\", user._id);\r\n\r\n//       console.log(\"Uploading file for user:\", user._id, file);\r\n\r\n//       try {\r\n//         const res = await axios.post(\r\n//           \"http://localhost:8000/api/users/uploadCover\",\r\n//           data\r\n//         );\r\n//         console.log(\"Upload response:\", res.data);\r\n//         setUser((prev) => ({ ...prev, coverPicture: res.data.filename }));\r\n//       } catch (err) {\r\n//         console.error(\"Error uploading file:\", err);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Topbar />\r\n//       <div className=\"profile\">\r\n//         <Sidebar />\r\n//         <div className=\"profileRight\">\r\n//           <section className=\"profileCover\">\r\n//             <h1 className=\"hello\">Hi</h1>\r\n//             <img\r\n//               src={\r\n//                 user.coverPicture\r\n//                   ? `${PUBLIC_FOLDER}/images/${user.coverPicture}`\r\n//                   : `${PUBLIC_FOLDER}/post/3.jpeg`\r\n//               }\r\n//               alt=\"cover\"\r\n//               className=\"profileCoverImg\"\r\n//             />\r\n//           </section>\r\n//           <section className=\"below\">\r\n//             <div className=\"profileInfo\">\r\n//               <h4 className=\"profileInfoName\">{user.username}</h4>\r\n//               <span className=\"profileInfoDesc\">{user.desc}</span>\r\n//             </div>\r\n//             <input type=\"file\" onChange={handleFileChange} />\r\n//             <button onClick={handleUpload}>Upload</button>\r\n//           </section>\r\n//           <div className=\"profileRightBottom\">\r\n//             <Timeline username={username} gridView={true} pageType=\"profile\" />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Profile.css\";\r\nimport axios from \"axios\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Timeline from \"../../components/timeline/Timeline\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function Profile() {\r\n  const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const [user, setUser] = useState({});\r\n  const [file, setFile] = useState(null);\r\n  const { username } = useParams();\r\n  const token = \"YOUR_JWT_TOKEN\"; // ここでJWTトークンを取得\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await axios.get(`/api/users?username=${username}`);\r\n        setUser(response.data);\r\n        console.log(\"User data fetched:\", response.data);\r\n      } catch (error) {\r\n        console.error(\r\n          \"Error fetching user:\",\r\n          error.response ? error.response.data : error.message\r\n        );\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, [username]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (file) {\r\n      const data = new FormData();\r\n      data.append(\"file\", file);\r\n      data.append(\"userId\", user._id);\r\n      console.log(\"Uploading file for user:\", user._id, file);\r\n\r\n      try {\r\n        const res = await axios.post(\r\n          \"http://localhost:8000/api/users/uploadCover\",\r\n          data,\r\n          {\r\n            headers: {\r\n              token: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        console.log(\"Upload response:\", res.data);\r\n        setUser((prev) => ({ ...prev, coverPicture: res.data.filename }));\r\n      } catch (err) {\r\n        console.error(\"Error uploading file:\", err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Topbar />\r\n      <div className=\"profile\">\r\n        <Sidebar />\r\n        <div className=\"profileRight\">\r\n          <section className=\"profileCover\">\r\n            <h1 className=\"hello\">Hi</h1>\r\n            <img\r\n              src={\r\n                user.coverPicture`${PUBLIC_FOLDER}/images/${user.coverPicture}`\r\n                // : `${PUBLIC_FOLDER}/post/3.jpeg`\r\n              }\r\n              alt=\"cover\"\r\n              className=\"profileCoverImg\"\r\n              onError={(e) => {\r\n                console.log(\"Image load error:\", e);\r\n                e.target.src = `${PUBLIC_FOLDER}/post/3.jpeg`;\r\n              }}\r\n            />\r\n          </section>\r\n          <section className=\"below\">\r\n            <div className=\"profileInfo\">\r\n              <h4 className=\"profileInfoName\">{user.username}</h4>\r\n              <span className=\"profileInfoDesc\">{user.desc}</span>\r\n            </div>\r\n            <input type=\"file\" onChange={handleFileChange} />\r\n            <button onClick={handleUpload}>Upload</button>\r\n          </section>\r\n          <div className=\"profileRightBottom\">\r\n            <Timeline username={username} gridView={true} pageType=\"profile\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}