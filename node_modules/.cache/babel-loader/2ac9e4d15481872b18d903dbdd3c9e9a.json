{"ast":null,"code":"var _jsxFileName = \"/Users/kiichirosuganuma/Desktop/dev/real-sns/frontend/src/components/post/Post.jsx\",\n    _s = $RefreshSig$();\n\n// import { MoreVert } from \"@mui/icons-material\";\n// import axios from \"axios\";\n// import React, { useContext, useEffect, useState } from \"react\";\n// import \"./Post.css\";\n// import { format } from \"timeago.js\";\n// import { Link } from \"react-router-dom\";\n// import { AuthContext } from \"../../context/AuthContext\";\n// export default function Post({ post }) {\n//   const [like, setLike] = useState(post.likes.length);\n//   const [isLiked, setIsLiked] = useState(false);\n//   const [user, setUser] = useState({});\n//   const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\n//   const { user: currentUser } = useContext(AuthContext);\n//   useEffect(() => {\n//     const fetchUser = async () => {\n//       // const res = await axios.get(`/users/${post.userId}`);\n//       const res = await axios.get(`/users?userId=${post.userId}`);\n//       setUser(res.data);\n//       // console.log(res.data);\n//     };\n//     fetchUser();\n//   }, [post.userId]);\n//   const handleLike = async () => {\n//     try {\n//       //いいねのAPIを叩く\n//       await axios.put(`/posts/${post._id}/like`, { userId: currentUser._id });\n//     } catch (err) {\n//       console.log(err);\n//     }\n//     setLike(isLiked ? like - 1 : like + 1);\n//     setIsLiked(!isLiked);\n//   };\n//   return (\n//     <div className=\"post\">\n//       <div className=\"postWrapper\">\n//         <div className=\"postTop\">\n//           <div className=\"postTopLeft\">\n//             <Link to={`profile/${user.username}`}>\n//               <img\n//                 src={\n//                   user.profilePicture\n//                     ? PUBLIC_FOLDER + user.profilePicture\n//                     : PUBLIC_FOLDER + \"person/noAvatar.png\"\n//                 }\n//                 alt=\"\"\n//                 className=\"postProfileImg\"\n//               />\n//             </Link>\n//             <span className=\"postUsername\">{user.username}</span>\n//             <span className=\"postDate\">{format(post.createdAt)}</span>\n//           </div>\n//           <div className=\"postTopRight\">\n//             <MoreVert />\n//           </div>\n//         </div>\n//         <div className=\"postCenter\">\n//           <span className=\"postText\">{post.desc}</span>\n//           <img\n//             className=\"postImg\"\n//             src={PUBLIC_FOLDER + \"/images/\" + post.img}\n//             alt=\"\"\n//           />\n//         </div>\n//         <div className=\"postBottom\">\n//           <div className=\"postBottomLeft\">\n//             <img\n//               className=\"likeIcon\"\n//               src={PUBLIC_FOLDER + \"/heart.png\"}\n//               alt=\"\"\n//               onClick={() => handleLike()}\n//             />\n//             <span className=\"postLikeCounter\">\n//               {like}人がいいねを押しました\n//             </span>\n//           </div>\n//           <div className=\"postBottomRight\">\n//             <span className=\"postCommentText\">{post.comment}:コメント</span>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\nimport React, { useEffect, useState } from \"react\";\nimport \"./Post.css\";\nimport { MoreVert } from \"@mui/icons-material\";\nimport axios from \"axios\";\nimport { format } from \"timeago.js\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nexport default function Post(_ref) {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\n  const [like, setLike] = useState(post.likes.length);\n  const [isLiked, setIsLiked] = useState(false);\n  const [user, setUser] = useState({});\n  const [isOpen, setIsOpen] = useState(false);\n  const [desc, setDesc] = useState(post.desc);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await axios.get(`/users?userId=${post.userId}`);\n        console.log(response.data);\n        setUser(response.data);\n      } catch (error) {\n        console.error(\"Error fetching user:\", error.response ? error.response.data : error.message);\n      }\n    };\n\n    fetchUser();\n  }, [post.userId]);\n  useEffect(() => {\n    setIsLiked(post.likes.includes(\"currentUserId\"));\n  }, [post.likes]);\n\n  const handleLike = async () => {\n    try {\n      await axios.put(`/posts/${post._id}/like`, {\n        userId: \"currentUserId\"\n      });\n      setLike(isLiked ? like - 1 : like + 1);\n      setIsLiked(!isLiked);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleEdit = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        userId: \"currentUserId\",\n        desc\n      });\n      setIsOpen(false);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postTopLeft\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/profile/${user.username}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.profilePicture || PUBLIC_FOLDER + \"/person/noAvatar.png\",\n              alt: \"\",\n              className: \"postProfileImg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postUserName\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postDate\",\n            children: format(post.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postTopRight\",\n          children: /*#__PURE__*/_jsxDEV(MoreVert, {\n            style: {\n              cursor: \"pointer\"\n            },\n            onClick: () => setIsOpen(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postCenter\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"postText\",\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: PUBLIC_FOLDER + post.img,\n          alt: \"\",\n          className: \"postImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postBottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postBottomLeft\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: PUBLIC_FOLDER + (isLiked ? \"/redHeart.png\" : \"/heart.png\"),\n            alt: \"\",\n            className: \"likeIcon\",\n            onClick: handleLike\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postLikeCounter\",\n            children: [like, \" people liked\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postBottomRight\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postCommentText\",\n            children: [post.comment, \" comments\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onRequestClose: () => setIsOpen(false),\n      contentLabel: \"Edit Post\",\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"modalTextarea\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsOpen(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"DRGgO0SwivUN4HF54QG+1b17gjU=\");\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/kiichirosuganuma/Desktop/dev/real-sns/frontend/src/components/post/Post.jsx"],"names":["React","useEffect","useState","MoreVert","axios","format","Link","Modal","setAppElement","Post","post","PUBLIC_FOLDER","process","env","REACT_APP_PUBLIC_FOLDER","like","setLike","likes","length","isLiked","setIsLiked","user","setUser","isOpen","setIsOpen","desc","setDesc","fetchUser","response","get","userId","console","log","data","error","message","includes","handleLike","put","_id","err","handleEdit","username","profilePicture","createdAt","cursor","img","comment","e","target","value"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEAA,KAAK,CAACC,aAAN,CAAoB,OAApB;AAEA,eAAe,SAASC,IAAT,OAAwB;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACrC,QAAMC,aAAa,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAlC;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACQ,IAAI,CAACO,KAAL,CAAWC,MAAZ,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACqB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAACQ,IAAI,CAACe,IAAN,CAAhC;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0B,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAW,iBAAgBnB,IAAI,CAACoB,MAAO,EAAvC,CAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,IAArB;AACAX,QAAAA,OAAO,CAACM,QAAQ,CAACK,IAAV,CAAP;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACdH,QAAAA,OAAO,CAACG,KAAR,CACE,sBADF,EAEEA,KAAK,CAACN,QAAN,GAAiBM,KAAK,CAACN,QAAN,CAAeK,IAAhC,GAAuCC,KAAK,CAACC,OAF/C;AAID;AACF,KAXD;;AAYAR,IAAAA,SAAS;AACV,GAdQ,EAcN,CAACjB,IAAI,CAACoB,MAAN,CAdM,CAAT;AAgBA7B,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,UAAU,CAACV,IAAI,CAACO,KAAL,CAAWmB,QAAX,CAAoB,eAApB,CAAD,CAAV;AACD,GAFQ,EAEN,CAAC1B,IAAI,CAACO,KAAN,CAFM,CAAT;;AAIA,QAAMoB,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMjC,KAAK,CAACkC,GAAN,CAAW,UAAS5B,IAAI,CAAC6B,GAAI,OAA7B,EAAqC;AAAET,QAAAA,MAAM,EAAE;AAAV,OAArC,CAAN;AACAd,MAAAA,OAAO,CAACG,OAAO,GAAGJ,IAAI,GAAG,CAAV,GAAcA,IAAI,GAAG,CAA7B,CAAP;AACAK,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,KAJD,CAIE,OAAOqB,GAAP,EAAY;AACZT,MAAAA,OAAO,CAACG,KAAR,CAAcM,GAAd;AACD;AACF,GARD;;AAUA,QAAMC,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMrC,KAAK,CAACkC,GAAN,CAAW,UAAS5B,IAAI,CAAC6B,GAAI,EAA7B,EAAgC;AAAET,QAAAA,MAAM,EAAE,eAAV;AAA2BL,QAAAA;AAA3B,OAAhC,CAAN;AACAD,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAHD,CAGE,OAAOgB,GAAP,EAAY;AACZT,MAAAA,OAAO,CAACG,KAAR,CAAcM,GAAd;AACD;AACF,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,YAAWnB,IAAI,CAACqB,QAAS,EAApC;AAAA,mCACE;AACE,cAAA,GAAG,EACDrB,IAAI,CAACsB,cAAL,IAAuBhC,aAAa,GAAG,sBAF3C;AAIE,cAAA,GAAG,EAAC,EAJN;AAKE,cAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AAAM,YAAA,SAAS,EAAC,cAAhB;AAAA,sBAAgCU,IAAI,CAACqB;AAArC;AAAA;AAAA;AAAA;AAAA,kBAVF,eAWE;AAAM,YAAA,SAAS,EAAC,UAAhB;AAAA,sBAA4BrC,MAAM,CAACK,IAAI,CAACkC,SAAN;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACE,QAAC,QAAD;AACE,YAAA,KAAK,EAAE;AAAEC,cAAAA,MAAM,EAAE;AAAV,aADT;AAEE,YAAA,OAAO,EAAE,MAAMrB,SAAS,CAAC,IAAD;AAF1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAuBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA,oBAA4BC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,GAAG,EAAEd,aAAa,GAAGD,IAAI,CAACoC,GAA/B;AAAoC,UAAA,GAAG,EAAC,EAAxC;AAA2C,UAAA,SAAS,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF,eA2BE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AACE,YAAA,GAAG,EAAEnC,aAAa,IAAIQ,OAAO,GAAG,eAAH,GAAqB,YAAhC,CADpB;AAEE,YAAA,GAAG,EAAC,EAFN;AAGE,YAAA,SAAS,EAAC,UAHZ;AAIE,YAAA,OAAO,EAAEkB;AAJX;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAA,uBAAmCtB,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAA,uBAAmCL,IAAI,CAACqC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA4CE,QAAC,KAAD;AACE,MAAA,MAAM,EAAExB,MADV;AAEE,MAAA,cAAc,EAAE,MAAMC,SAAS,CAAC,KAAD,CAFjC;AAGE,MAAA,YAAY,EAAC,WAHf;AAIE,MAAA,SAAS,EAAC,OAJZ;AAKE,MAAA,gBAAgB,EAAC,SALnB;AAAA,8BAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,KAAK,EAAEC,IAFT;AAGE,QAAA,QAAQ,EAAGuB,CAAD,IAAOtB,OAAO,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,cARF,eAaE;AAAQ,QAAA,OAAO,EAAET,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE;AAAQ,QAAA,OAAO,EAAE,MAAMjB,SAAS,CAAC,KAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+DD;;GA/GuBf,I;;KAAAA,I","sourcesContent":["// import { MoreVert } from \"@mui/icons-material\";\r\n// import axios from \"axios\";\r\n// import React, { useContext, useEffect, useState } from \"react\";\r\n// import \"./Post.css\";\r\n// import { format } from \"timeago.js\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { AuthContext } from \"../../context/AuthContext\";\r\n\r\n// export default function Post({ post }) {\r\n//   const [like, setLike] = useState(post.likes.length);\r\n//   const [isLiked, setIsLiked] = useState(false);\r\n//   const [user, setUser] = useState({});\r\n//   const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n//   const { user: currentUser } = useContext(AuthContext);\r\n\r\n//   useEffect(() => {\r\n//     const fetchUser = async () => {\r\n//       // const res = await axios.get(`/users/${post.userId}`);\r\n//       const res = await axios.get(`/users?userId=${post.userId}`);\r\n//       setUser(res.data);\r\n//       // console.log(res.data);\r\n//     };\r\n//     fetchUser();\r\n//   }, [post.userId]);\r\n\r\n//   const handleLike = async () => {\r\n//     try {\r\n//       //いいねのAPIを叩く\r\n//       await axios.put(`/posts/${post._id}/like`, { userId: currentUser._id });\r\n//     } catch (err) {\r\n//       console.log(err);\r\n//     }\r\n//     setLike(isLiked ? like - 1 : like + 1);\r\n//     setIsLiked(!isLiked);\r\n//   };\r\n//   return (\r\n//     <div className=\"post\">\r\n//       <div className=\"postWrapper\">\r\n//         <div className=\"postTop\">\r\n//           <div className=\"postTopLeft\">\r\n//             <Link to={`profile/${user.username}`}>\r\n//               <img\r\n//                 src={\r\n//                   user.profilePicture\r\n//                     ? PUBLIC_FOLDER + user.profilePicture\r\n//                     : PUBLIC_FOLDER + \"person/noAvatar.png\"\r\n//                 }\r\n//                 alt=\"\"\r\n//                 className=\"postProfileImg\"\r\n//               />\r\n//             </Link>\r\n//             <span className=\"postUsername\">{user.username}</span>\r\n//             <span className=\"postDate\">{format(post.createdAt)}</span>\r\n//           </div>\r\n//           <div className=\"postTopRight\">\r\n//             <MoreVert />\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"postCenter\">\r\n//           <span className=\"postText\">{post.desc}</span>\r\n//           <img\r\n//             className=\"postImg\"\r\n//             src={PUBLIC_FOLDER + \"/images/\" + post.img}\r\n//             alt=\"\"\r\n//           />\r\n//         </div>\r\n//         <div className=\"postBottom\">\r\n//           <div className=\"postBottomLeft\">\r\n//             <img\r\n//               className=\"likeIcon\"\r\n//               src={PUBLIC_FOLDER + \"/heart.png\"}\r\n//               alt=\"\"\r\n//               onClick={() => handleLike()}\r\n//             />\r\n//             <span className=\"postLikeCounter\">\r\n//               {like}人がいいねを押しました\r\n//             </span>\r\n//           </div>\r\n//           <div className=\"postBottomRight\">\r\n//             <span className=\"postCommentText\">{post.comment}:コメント</span>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Post.css\";\r\nimport { MoreVert } from \"@mui/icons-material\";\r\nimport axios from \"axios\";\r\nimport { format } from \"timeago.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"react-modal\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport default function Post({ post }) {\r\n  const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  const [like, setLike] = useState(post.likes.length);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [desc, setDesc] = useState(post.desc);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await axios.get(`/users?userId=${post.userId}`);\r\n        console.log(response.data);\r\n        setUser(response.data);\r\n      } catch (error) {\r\n        console.error(\r\n          \"Error fetching user:\",\r\n          error.response ? error.response.data : error.message\r\n        );\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, [post.userId]);\r\n\r\n  useEffect(() => {\r\n    setIsLiked(post.likes.includes(\"currentUserId\"));\r\n  }, [post.likes]);\r\n\r\n  const handleLike = async () => {\r\n    try {\r\n      await axios.put(`/posts/${post._id}/like`, { userId: \"currentUserId\" });\r\n      setLike(isLiked ? like - 1 : like + 1);\r\n      setIsLiked(!isLiked);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    try {\r\n      await axios.put(`/posts/${post._id}`, { userId: \"currentUserId\", desc });\r\n      setIsOpen(false);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"postWrapper\">\r\n        <div className=\"postTop\">\r\n          <div className=\"postTopLeft\">\r\n            <Link to={`/profile/${user.username}`}>\r\n              <img\r\n                src={\r\n                  user.profilePicture || PUBLIC_FOLDER + \"/person/noAvatar.png\"\r\n                }\r\n                alt=\"\"\r\n                className=\"postProfileImg\"\r\n              />\r\n            </Link>\r\n            <span className=\"postUserName\">{user.username}</span>\r\n            <span className=\"postDate\">{format(post.createdAt)}</span>\r\n          </div>\r\n          <div className=\"postTopRight\">\r\n            <MoreVert\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => setIsOpen(true)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"postCenter\">\r\n          <span className=\"postText\">{desc}</span>\r\n          <img src={PUBLIC_FOLDER + post.img} alt=\"\" className=\"postImg\" />\r\n        </div>\r\n        <div className=\"postBottom\">\r\n          <div className=\"postBottomLeft\">\r\n            <img\r\n              src={PUBLIC_FOLDER + (isLiked ? \"/redHeart.png\" : \"/heart.png\")}\r\n              alt=\"\"\r\n              className=\"likeIcon\"\r\n              onClick={handleLike}\r\n            />\r\n            <span className=\"postLikeCounter\">{like} people liked</span>\r\n          </div>\r\n          <div className=\"postBottomRight\">\r\n            <span className=\"postCommentText\">{post.comment} comments</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onRequestClose={() => setIsOpen(false)}\r\n        contentLabel=\"Edit Post\"\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        <h2>Edit Post</h2>\r\n        <textarea\r\n          className=\"modalTextarea\"\r\n          value={desc}\r\n          onChange={(e) => setDesc(e.target.value)}\r\n        />\r\n        <button onClick={handleEdit}>Save</button>\r\n        <button onClick={() => setIsOpen(false)}>Cancel</button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}