{"ast":null,"code":"var _jsxFileName = \"/Users/kiichirosuganuma/Desktop/dev/real-sns/frontend/src/pages/login/Login.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useContext, useRef } from \"react\";\n// import \"./Login.css\";\n// import { loginCall } from \"../../apiCalls\";\n// import { AuthContext } from \"../../context/AuthContext\";\n// import { Navigate } from \"react-router-dom\";\n// import { useNavigate } from \"react-router-dom\";\n// export default function Login() {\n//   const email = useRef();\n//   const password = useRef();\n//   const { user, isFetching, error, dispatch } = useContext(AuthContext);\n//   const navigate = useNavigate(); // useNavigateをフックとして利用\n//   const handleClick = async (e) => {\n//     e.preventDefault();\n//     // ログイン処理の開始　エラーが指定している行が73\n//     loginCall(\n//       { email: email.current.value, password: password.current.value },\n//       dispatch\n//     );\n//   };\n//   const handleRegisterClick = () => {\n//     navigate(\"/register\");\n//   };\n//   const handleReset = () => {\n//     navigate(\"/reset\");\n//   };\n//   const handleHomeClick = () => {\n//     navigate(\"/\");\n//   };\n//   // ローディング状態かエラーがある場合のUI変更\n//   return (\n//     <div className=\"login\">\n//       <div className=\"loginWrapper\">\n//         <div className=\"loginLeft\">\n//           <h3 className=\"loginLogo\">Real SNS</h3>\n//           <span className=\"loginDesc\">本格的なSNSを、自分の手で。</span>\n//         </div>\n//         <div className=\"loginRight\">\n//           <form className=\"loginBox\" onSubmit={handleClick}>\n//             <p className=\"loginMsg\">ログインはこちら</p>\n//             <input\n//               type=\"email\"\n//               className=\"loginInput\"\n//               placeholder=\"Eメール\"\n//               required\n//               ref={email}\n//               disabled={isFetching} // ローディング中は入力を無効化\n//             />\n//             <input\n//               type=\"password\"\n//               className=\"loginInput\"\n//               required\n//               minLength=\"6\"\n//               placeholder=\"パスワード\"\n//               ref={password}\n//               disabled={isFetching} // ローディング中は入力を無効化\n//             />\n//             <button\n//               className=\"loginButton\"\n//               // disabled={isFetching}\n//               // onClick={handleHomeClick}\n//             >\n//               {isFetching ? \"ローディング中...\" : \"ログイン\"}\n//             </button>\n//             {error && (\n//               <span className=\"loginError\">\n//                 ログインに失敗しました。再試行してください。\n//               </span>\n//             )}\n//           </form>\n//           <div className=\"otherbox\">\n//             <button className=\"loginForgot\" onClick={handleReset}>\n//               パスワードを忘れた方へ\n//             </button>\n//             <button\n//               className=\"loginRegisterButton\"\n//               disabled={isFetching}\n//               onClick={handleRegisterClick}\n//             >\n//               アカウント作成\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\nimport React, { useRef, useContext } from \"react\";\nimport { loginCall } from \"./apiCalls\"; // loginCall関数をインポート\n\nimport { AuthContext } from \"./context/AuthContext\"; // AuthContextをインポート\n\nimport CircularProgress from \"@mui/material/CircularProgress\"; // ローディング表示用\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  // emailとpasswordの参照を作成\n  const email = useRef();\n  const password = useRef();\n  const {\n    user,\n    isFetching,\n    dispatch\n  } = useContext(AuthContext);\n\n  const handleClick = e => {\n    e.preventDefault(); // ページのリロードを防ぐ\n\n    loginCall({\n      email: email.current.value,\n      password: password.current.value\n    }, dispatch);\n  };\n\n  console.log(user); // ログイン後のユーザー情報を確認\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginLeft\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"loginLogo\",\n          children: \"MyApp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loginDesc\",\n          children: \"Connect with friends and the world around you on MyApp.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginRight\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"loginBox\",\n          onSubmit: handleClick,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Email\",\n            type: \"email\",\n            required: true,\n            className: \"loginInput\",\n            ref: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Password\",\n            type: \"password\",\n            required: true,\n            minLength: \"6\",\n            className: \"loginInput\",\n            ref: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"loginButton\",\n            type: \"submit\",\n            disabled: isFetching,\n            children: isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: \"20px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this) : \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loginForgot\",\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"loginRegisterButton\",\n            children: isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: \"20px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this) : \"Create a New Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"zzJJqgbz5Li+73U/GRiO6l37u5w=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/kiichirosuganuma/Desktop/dev/real-sns/frontend/src/pages/login/Login.jsx"],"names":["React","useRef","useContext","loginCall","AuthContext","CircularProgress","Login","email","password","user","isFetching","dispatch","handleClick","e","preventDefault","current","value","console","log"],"mappings":"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","sourcesContent":["// import React, { useContext, useRef } from \"react\";\r\n// import \"./Login.css\";\r\n// import { loginCall } from \"../../apiCalls\";\r\n// import { AuthContext } from \"../../context/AuthContext\";\r\n// import { Navigate } from \"react-router-dom\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// export default function Login() {\r\n//   const email = useRef();\r\n//   const password = useRef();\r\n//   const { user, isFetching, error, dispatch } = useContext(AuthContext);\r\n//   const navigate = useNavigate(); // useNavigateをフックとして利用\r\n\r\n//   const handleClick = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // ログイン処理の開始　エラーが指定している行が73\r\n//     loginCall(\r\n//       { email: email.current.value, password: password.current.value },\r\n//       dispatch\r\n//     );\r\n//   };\r\n\r\n//   const handleRegisterClick = () => {\r\n//     navigate(\"/register\");\r\n//   };\r\n//   const handleReset = () => {\r\n//     navigate(\"/reset\");\r\n//   };\r\n//   const handleHomeClick = () => {\r\n//     navigate(\"/\");\r\n//   };\r\n\r\n//   // ローディング状態かエラーがある場合のUI変更\r\n//   return (\r\n//     <div className=\"login\">\r\n//       <div className=\"loginWrapper\">\r\n//         <div className=\"loginLeft\">\r\n//           <h3 className=\"loginLogo\">Real SNS</h3>\r\n//           <span className=\"loginDesc\">本格的なSNSを、自分の手で。</span>\r\n//         </div>\r\n//         <div className=\"loginRight\">\r\n//           <form className=\"loginBox\" onSubmit={handleClick}>\r\n//             <p className=\"loginMsg\">ログインはこちら</p>\r\n//             <input\r\n//               type=\"email\"\r\n//               className=\"loginInput\"\r\n//               placeholder=\"Eメール\"\r\n//               required\r\n//               ref={email}\r\n//               disabled={isFetching} // ローディング中は入力を無効化\r\n//             />\r\n//             <input\r\n//               type=\"password\"\r\n//               className=\"loginInput\"\r\n//               required\r\n//               minLength=\"6\"\r\n//               placeholder=\"パスワード\"\r\n//               ref={password}\r\n//               disabled={isFetching} // ローディング中は入力を無効化\r\n//             />\r\n//             <button\r\n//               className=\"loginButton\"\r\n//               // disabled={isFetching}\r\n//               // onClick={handleHomeClick}\r\n//             >\r\n//               {isFetching ? \"ローディング中...\" : \"ログイン\"}\r\n//             </button>\r\n//             {error && (\r\n//               <span className=\"loginError\">\r\n//                 ログインに失敗しました。再試行してください。\r\n//               </span>\r\n//             )}\r\n//           </form>\r\n\r\n//           <div className=\"otherbox\">\r\n//             <button className=\"loginForgot\" onClick={handleReset}>\r\n//               パスワードを忘れた方へ\r\n//             </button>\r\n//             <button\r\n//               className=\"loginRegisterButton\"\r\n//               disabled={isFetching}\r\n//               onClick={handleRegisterClick}\r\n//             >\r\n//               アカウント作成\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport React, { useRef, useContext } from \"react\";\r\nimport { loginCall } from \"./apiCalls\"; // loginCall関数をインポート\r\nimport { AuthContext } from \"./context/AuthContext\"; // AuthContextをインポート\r\nimport CircularProgress from \"@mui/material/CircularProgress\"; // ローディング表示用\r\n\r\nexport default function Login() {\r\n  // emailとpasswordの参照を作成\r\n  const email = useRef();\r\n  const password = useRef();\r\n  const { user, isFetching, dispatch } = useContext(AuthContext);\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault(); // ページのリロードを防ぐ\r\n    loginCall(\r\n      { email: email.current.value, password: password.current.value },\r\n      dispatch\r\n    );\r\n  };\r\n\r\n  console.log(user); // ログイン後のユーザー情報を確認\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginWrapper\">\r\n        <div className=\"loginLeft\">\r\n          <h3 className=\"loginLogo\">MyApp</h3>\r\n          <span className=\"loginDesc\">\r\n            Connect with friends and the world around you on MyApp.\r\n          </span>\r\n        </div>\r\n        <div className=\"loginRight\">\r\n          <form className=\"loginBox\" onSubmit={handleClick}>\r\n            <input\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              required\r\n              className=\"loginInput\"\r\n              ref={email}\r\n            />\r\n            <input\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              required\r\n              minLength=\"6\"\r\n              className=\"loginInput\"\r\n              ref={password}\r\n            />\r\n            <button className=\"loginButton\" type=\"submit\" disabled={isFetching}>\r\n              {isFetching ? <CircularProgress size=\"20px\" /> : \"Log In\"}\r\n            </button>\r\n            <span className=\"loginForgot\">Forgot Password?</span>\r\n            <button className=\"loginRegisterButton\">\r\n              {isFetching ? (\r\n                <CircularProgress size=\"20px\" />\r\n              ) : (\r\n                \"Create a New Account\"\r\n              )}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}