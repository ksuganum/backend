{"ast":null,"code":"var _jsxFileName = \"/Users/kiichirosuganuma/Desktop/dev/real-sns/frontend/src/components/post/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport { MoreVert } from \"@mui/icons-material\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./Post.css\";\nimport { format } from \"timeago.js\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post(_ref) {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const [like, setLike] = useState(post.likes.length);\n  const [isLiked, setIsLiked] = useState(false);\n  const [user, setUser] = useState({});\n  const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\n  const {\n    user: currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchUser = async () => {\n      // const res = await axios.get(`/users/${post.userId}`);\n      const res = await axios.get(`/users?userId=${post.userId}`);\n      setUser(res.data); // console.log(res.data);\n    };\n\n    fetchUser();\n  }, [post.userId]);\n\n  const handleLike = async () => {\n    try {\n      //いいねのAPIを叩く\n      await axios.put(`/posts/${post._id}/like`, {\n        userId: currentUser._id\n      });\n    } catch (err) {\n      console.log(err);\n    }\n\n    setLike(isLiked ? like - 1 : like + 1);\n    setIsLiked(!isLiked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postTopLeft\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `profile/${user.username}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.profilePicture ? PUBLIC_FOLDER + user.profilePicture : PUBLIC_FOLDER + \"person/noAvatar.png\",\n              alt: \"\",\n              className: \"postProfileImg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postUsername\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postDate\",\n            children: format(post.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postTopRight\",\n          children: /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postCenter\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"postText\",\n          children: post.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"postImg\",\n          src: PUBLIC_FOLDER + \"/images/\" + post.img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postBottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postBottomLeft\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"likeIcon\",\n            src: PUBLIC_FOLDER + \"/heart.png\",\n            alt: \"\",\n            onClick: () => handleLike()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postLikeCounter\",\n            children: [like, \"\\u4EBA\\u304C\\u3044\\u3044\\u306D\\u3092\\u62BC\\u3057\\u307E\\u3057\\u305F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postBottomRight\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postCommentText\",\n            children: [post.comment, \":\\u30B3\\u30E1\\u30F3\\u30C8\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n} // import React, { useEffect, useState, useContext } from \"react\";\n// import \"./Post.css\";\n// import { MoreVert } from \"@mui/icons-material\";\n// import axios from \"axios\";\n// import { format } from \"timeago.js\";\n// import { Link } from \"react-router-dom\";\n// import Modal from \"react-modal\";\n// import { AuthContext } from \"../../context/AuthContext\";\n// Modal.setAppElement(\"#root\");\n// export default function Post({ post, onDelete }) {\n//   // onDeleteプロップを追加\n//   const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\n//   const [like, setLike] = useState(post.likes.length);\n//   const [isLiked, setIsLiked] = useState(false);\n//   const [user, setUser] = useState({});\n//   const [isOpen, setIsOpen] = useState(false);\n//   const [desc, setDesc] = useState(post.desc);\n//   const { user: currentUser } = useContext(AuthContext);\n//   useEffect(() => {\n//     const fetchUser = async () => {\n//       try {\n//         const response = await axios.get(`/users?userId=${post.userId}`);\n//         setUser(response.data);\n//       } catch (error) {\n//         console.error(\n//           \"Error fetching user:\",\n//           error.response ? error.response.data : error.message\n//         );\n//       }\n//     };\n//     fetchUser();\n//   }, [post.userId]);\n//   useEffect(() => {\n//     if (currentUser) {\n//       setIsLiked(post.likes.includes(currentUser._id));\n//     }\n//   }, [post.likes, currentUser]);\n//   const handleLike = async () => {\n//     if (!currentUser) return;\n//     try {\n//       await axios.put(`/posts/${post._id}/like`, { userId: currentUser._id });\n//       setLike(isLiked ? like - 1 : like + 1);\n//       setIsLiked(!isLiked);\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n//   const handleEdit = async () => {\n//     if (!currentUser) return;\n//     try {\n//       await axios.put(`/posts/${post._id}`, { userId: currentUser._id, desc });\n//       setIsOpen(false);\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n//   const handleDelete = async () => {\n//     if (!currentUser) return;\n//     try {\n//       await axios.delete(`/posts/${post._id}`, {\n//         data: { userId: currentUser._id },\n//       });\n//       onDelete(post._id); // 削除後に親コンポーネントの関数を呼び出して状態を更新\n//       setIsOpen(false);\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n//   return (\n//     <div className=\"post\">\n//       <div className=\"postWrapper\">\n//         <div className=\"postTop\">\n//           <div className=\"postTopLeft\">\n//             <Link to={`/profile/${user.username}`}>\n//               <img\n//                 src={\n//                   user.profilePicture || PUBLIC_FOLDER + \"/person/noAvatar.png\"\n//                 }\n//                 alt=\"\"\n//                 className=\"postProfileImg\"\n//               />\n//             </Link>\n//             <span className=\"postUserName\">{user.username}</span>\n//             <span className=\"postDate\">{format(post.createdAt)}</span>\n//           </div>\n//           <div className=\"postTopRight\">\n//             <MoreVert\n//               style={{ cursor: \"pointer\" }}\n//               onClick={() => setIsOpen(true)}\n//             />\n//           </div>\n//         </div>\n//         <div className=\"postCenter\">\n//           <span className=\"postText\">{desc}</span>\n//           <img src={PUBLIC_FOLDER + post.img} alt=\"\" className=\"postImg\" />\n//         </div>\n//         <div className=\"postBottom\">\n//           <div className=\"postBottomLeft\">\n//             <img\n//               src={PUBLIC_FOLDER + (isLiked ? \"/redHeart.png\" : \"/heart.png\")}\n//               alt=\"\"\n//               className=\"likeIcon\"\n//               onClick={handleLike}\n//             />\n//             <span className=\"postLikeCounter\">{like} people liked</span>\n//           </div>\n//           <div className=\"postBottomRight\">\n//             <span className=\"postCommentText\">{post.comment} comments</span>\n//           </div>\n//         </div>\n//       </div>\n//       <Modal\n//         isOpen={isOpen}\n//         onRequestClose={() => setIsOpen(false)}\n//         contentLabel=\"Edit Post\"\n//         className=\"modal\"\n//         overlayClassName=\"overlay\"\n//       >\n//         <h2>Edit Post</h2>\n//         <textarea\n//           className=\"modalTextarea\"\n//           value={desc}\n//           onChange={(e) => setDesc(e.target.value)}\n//         />\n//         <button onClick={handleEdit}>Save</button>\n//         <button onClick={() => setIsOpen(false)}>Cancel</button>\n//         <button\n//           onClick={handleDelete}\n//           style={{ backgroundColor: \"red\", color: \"white\" }}\n//         >\n//           Delete\n//         </button>{\" \"}\n//         {/* 削除ボタンを追加 */}\n//       </Modal>\n//     </div>\n//   );\n// }\n\n_s(Post, \"FBxcannl+5iiwOAbQ6V6oU5Gb0I=\");\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/kiichirosuganuma/Desktop/dev/real-sns/frontend/src/components/post/Post.jsx"],"names":["MoreVert","axios","React","useContext","useEffect","useState","format","Link","AuthContext","Post","post","like","setLike","likes","length","isLiked","setIsLiked","user","setUser","PUBLIC_FOLDER","process","env","REACT_APP_PUBLIC_FOLDER","currentUser","fetchUser","res","get","userId","data","handleLike","put","_id","err","console","log","username","profilePicture","createdAt","desc","img","comment"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,YAAP;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAEA,eAAe,SAASC,IAAT,OAAwB;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACK,IAAI,CAACG,KAAL,CAAWC,MAAZ,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMc,aAAa,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAlC;AAEA,QAAM;AAAEL,IAAAA,IAAI,EAAEM;AAAR,MAAwBpB,UAAU,CAACK,WAAD,CAAxC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,SAAS,GAAG,YAAY;AAC5B;AACA,YAAMC,GAAG,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAW,iBAAgBhB,IAAI,CAACiB,MAAO,EAAvC,CAAlB;AACAT,MAAAA,OAAO,CAACO,GAAG,CAACG,IAAL,CAAP,CAH4B,CAI5B;AACD,KALD;;AAMAJ,IAAAA,SAAS;AACV,GARQ,EAQN,CAACd,IAAI,CAACiB,MAAN,CARM,CAAT;;AAUA,QAAME,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF;AACA,YAAM5B,KAAK,CAAC6B,GAAN,CAAW,UAASpB,IAAI,CAACqB,GAAI,OAA7B,EAAqC;AAAEJ,QAAAA,MAAM,EAAEJ,WAAW,CAACQ;AAAtB,OAArC,CAAN;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;;AACDpB,IAAAA,OAAO,CAACG,OAAO,GAAGJ,IAAI,GAAG,CAAV,GAAcA,IAAI,GAAG,CAA7B,CAAP;AACAK,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GATD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,WAAUE,IAAI,CAACkB,QAAS,EAAnC;AAAA,mCACE;AACE,cAAA,GAAG,EACDlB,IAAI,CAACmB,cAAL,GACIjB,aAAa,GAAGF,IAAI,CAACmB,cADzB,GAEIjB,aAAa,GAAG,qBAJxB;AAME,cAAA,GAAG,EAAC,EANN;AAOE,cAAA,SAAS,EAAC;AAPZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAM,YAAA,SAAS,EAAC,cAAhB;AAAA,sBAAgCF,IAAI,CAACkB;AAArC;AAAA;AAAA;AAAA;AAAA,kBAZF,eAaE;AAAM,YAAA,SAAS,EAAC,UAAhB;AAAA,sBAA4B7B,MAAM,CAACI,IAAI,CAAC2B,SAAN;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAqBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA,oBAA4B3B,IAAI,CAAC4B;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,SADZ;AAEE,UAAA,GAAG,EAAEnB,aAAa,GAAG,UAAhB,GAA6BT,IAAI,CAAC6B,GAFzC;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,eA6BE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,UADZ;AAEE,YAAA,GAAG,EAAEpB,aAAa,GAAG,YAFvB;AAGE,YAAA,GAAG,EAAC,EAHN;AAIE,YAAA,OAAO,EAAE,MAAMU,UAAU;AAJ3B;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAA,uBACGlB,IADH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAA,uBAAmCD,IAAI,CAAC8B,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkpOwB/B,I;;KAAAA,I","sourcesContent":["import { MoreVert } from \"@mui/icons-material\";\r\nimport axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./Post.css\";\r\nimport { format } from \"timeago.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Post({ post }) {\r\n  const [like, setLike] = useState(post.likes.length);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  const { user: currentUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      // const res = await axios.get(`/users/${post.userId}`);\r\n      const res = await axios.get(`/users?userId=${post.userId}`);\r\n      setUser(res.data);\r\n      // console.log(res.data);\r\n    };\r\n    fetchUser();\r\n  }, [post.userId]);\r\n\r\n  const handleLike = async () => {\r\n    try {\r\n      //いいねのAPIを叩く\r\n      await axios.put(`/posts/${post._id}/like`, { userId: currentUser._id });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setLike(isLiked ? like - 1 : like + 1);\r\n    setIsLiked(!isLiked);\r\n  };\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"postWrapper\">\r\n        <div className=\"postTop\">\r\n          <div className=\"postTopLeft\">\r\n            <Link to={`profile/${user.username}`}>\r\n              <img\r\n                src={\r\n                  user.profilePicture\r\n                    ? PUBLIC_FOLDER + user.profilePicture\r\n                    : PUBLIC_FOLDER + \"person/noAvatar.png\"\r\n                }\r\n                alt=\"\"\r\n                className=\"postProfileImg\"\r\n              />\r\n            </Link>\r\n            <span className=\"postUsername\">{user.username}</span>\r\n            <span className=\"postDate\">{format(post.createdAt)}</span>\r\n          </div>\r\n          <div className=\"postTopRight\">\r\n            <MoreVert />\r\n          </div>\r\n        </div>\r\n        <div className=\"postCenter\">\r\n          <span className=\"postText\">{post.desc}</span>\r\n          <img\r\n            className=\"postImg\"\r\n            src={PUBLIC_FOLDER + \"/images/\" + post.img}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"postBottom\">\r\n          <div className=\"postBottomLeft\">\r\n            <img\r\n              className=\"likeIcon\"\r\n              src={PUBLIC_FOLDER + \"/heart.png\"}\r\n              alt=\"\"\r\n              onClick={() => handleLike()}\r\n            />\r\n            <span className=\"postLikeCounter\">\r\n              {like}人がいいねを押しました\r\n            </span>\r\n          </div>\r\n          <div className=\"postBottomRight\">\r\n            <span className=\"postCommentText\">{post.comment}:コメント</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// import React, { useEffect, useState, useContext } from \"react\";\r\n// import \"./Post.css\";\r\n// import { MoreVert } from \"@mui/icons-material\";\r\n// import axios from \"axios\";\r\n// import { format } from \"timeago.js\";\r\n// import { Link } from \"react-router-dom\";\r\n// import Modal from \"react-modal\";\r\n// import { AuthContext } from \"../../context/AuthContext\";\r\n\r\n// Modal.setAppElement(\"#root\");\r\n\r\n// export default function Post({ post, onDelete }) {\r\n//   // onDeleteプロップを追加\r\n//   const PUBLIC_FOLDER = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n//   const [like, setLike] = useState(post.likes.length);\r\n//   const [isLiked, setIsLiked] = useState(false);\r\n//   const [user, setUser] = useState({});\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n//   const [desc, setDesc] = useState(post.desc);\r\n\r\n//   const { user: currentUser } = useContext(AuthContext);\r\n\r\n//   useEffect(() => {\r\n//     const fetchUser = async () => {\r\n//       try {\r\n//         const response = await axios.get(`/users?userId=${post.userId}`);\r\n//         setUser(response.data);\r\n//       } catch (error) {\r\n//         console.error(\r\n//           \"Error fetching user:\",\r\n//           error.response ? error.response.data : error.message\r\n//         );\r\n//       }\r\n//     };\r\n//     fetchUser();\r\n//   }, [post.userId]);\r\n\r\n//   useEffect(() => {\r\n//     if (currentUser) {\r\n//       setIsLiked(post.likes.includes(currentUser._id));\r\n//     }\r\n//   }, [post.likes, currentUser]);\r\n\r\n//   const handleLike = async () => {\r\n//     if (!currentUser) return;\r\n//     try {\r\n//       await axios.put(`/posts/${post._id}/like`, { userId: currentUser._id });\r\n//       setLike(isLiked ? like - 1 : like + 1);\r\n//       setIsLiked(!isLiked);\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = async () => {\r\n//     if (!currentUser) return;\r\n//     try {\r\n//       await axios.put(`/posts/${post._id}`, { userId: currentUser._id, desc });\r\n//       setIsOpen(false);\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async () => {\r\n//     if (!currentUser) return;\r\n//     try {\r\n//       await axios.delete(`/posts/${post._id}`, {\r\n//         data: { userId: currentUser._id },\r\n//       });\r\n//       onDelete(post._id); // 削除後に親コンポーネントの関数を呼び出して状態を更新\r\n//       setIsOpen(false);\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"post\">\r\n//       <div className=\"postWrapper\">\r\n//         <div className=\"postTop\">\r\n//           <div className=\"postTopLeft\">\r\n//             <Link to={`/profile/${user.username}`}>\r\n//               <img\r\n//                 src={\r\n//                   user.profilePicture || PUBLIC_FOLDER + \"/person/noAvatar.png\"\r\n//                 }\r\n//                 alt=\"\"\r\n//                 className=\"postProfileImg\"\r\n//               />\r\n//             </Link>\r\n//             <span className=\"postUserName\">{user.username}</span>\r\n//             <span className=\"postDate\">{format(post.createdAt)}</span>\r\n//           </div>\r\n//           <div className=\"postTopRight\">\r\n//             <MoreVert\r\n//               style={{ cursor: \"pointer\" }}\r\n//               onClick={() => setIsOpen(true)}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"postCenter\">\r\n//           <span className=\"postText\">{desc}</span>\r\n//           <img src={PUBLIC_FOLDER + post.img} alt=\"\" className=\"postImg\" />\r\n//         </div>\r\n//         <div className=\"postBottom\">\r\n//           <div className=\"postBottomLeft\">\r\n//             <img\r\n//               src={PUBLIC_FOLDER + (isLiked ? \"/redHeart.png\" : \"/heart.png\")}\r\n//               alt=\"\"\r\n//               className=\"likeIcon\"\r\n//               onClick={handleLike}\r\n//             />\r\n//             <span className=\"postLikeCounter\">{like} people liked</span>\r\n//           </div>\r\n//           <div className=\"postBottomRight\">\r\n//             <span className=\"postCommentText\">{post.comment} comments</span>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <Modal\r\n//         isOpen={isOpen}\r\n//         onRequestClose={() => setIsOpen(false)}\r\n//         contentLabel=\"Edit Post\"\r\n//         className=\"modal\"\r\n//         overlayClassName=\"overlay\"\r\n//       >\r\n//         <h2>Edit Post</h2>\r\n//         <textarea\r\n//           className=\"modalTextarea\"\r\n//           value={desc}\r\n//           onChange={(e) => setDesc(e.target.value)}\r\n//         />\r\n//         <button onClick={handleEdit}>Save</button>\r\n//         <button onClick={() => setIsOpen(false)}>Cancel</button>\r\n//         <button\r\n//           onClick={handleDelete}\r\n//           style={{ backgroundColor: \"red\", color: \"white\" }}\r\n//         >\r\n//           Delete\r\n//         </button>{\" \"}\r\n//         {/* 削除ボタンを追加 */}\r\n//       </Modal>\r\n//     </div>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}