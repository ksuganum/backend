{"ast":null,"code":"//アクションに応じて状態(state)を更新する仕組み\nconst AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false\n      };\n\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"LOGIN_ERROR\":\n      return {\n        user: null,\n        isFetching: false,\n        error: action.payload\n      };\n\n    case \"FOLLOW\":\n      return { ...state,\n        user: { ...state.user,\n          followings: [...state.user.following, action.payload]\n        }\n      };\n\n    case \"UNFOLLOW\":\n      return { ...state,\n        user: { ...state.user,\n          followings: state.user.followings.filter(following => following !== action.payload)\n        }\n      };\n\n    case \"LOGOUT\":\n      return {\n        user: null,\n        isFetching: false,\n        error: false\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AuthReducer;\nexport default AuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"sources":["/Users/kiichirosuganuma/Desktop/dev/real-sns/frontend/src/context/AuthReducer.js"],"names":["AuthReducer","state","action","type","user","isFetching","error","payload","followings","following","filter"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO;AACLC,QAAAA,IAAI,EAAE,IADD;AAELC,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,eAAL;AACE,aAAO;AACLF,QAAAA,IAAI,EAAEF,MAAM,CAACK,OADR;AAELF,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,aAAL;AACE,aAAO;AACLF,QAAAA,IAAI,EAAE,IADD;AAELC,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,KAAK,EAAEJ,MAAM,CAACK;AAHT,OAAP;;AAKF,SAAK,QAAL;AACE,aAAO,EACL,GAAGN,KADE;AAELG,QAAAA,IAAI,EAAE,EACJ,GAAGH,KAAK,CAACG,IADL;AAEJI,UAAAA,UAAU,EAAE,CAAC,GAAGP,KAAK,CAACG,IAAN,CAAWK,SAAf,EAA0BP,MAAM,CAACK,OAAjC;AAFR;AAFD,OAAP;;AAOF,SAAK,UAAL;AACE,aAAO,EACL,GAAGN,KADE;AAELG,QAAAA,IAAI,EAAE,EACJ,GAAGH,KAAK,CAACG,IADL;AAEJI,UAAAA,UAAU,EAAEP,KAAK,CAACG,IAAN,CAAWI,UAAX,CAAsBE,MAAtB,CACTD,SAAD,IAAeA,SAAS,KAAKP,MAAM,CAACK,OAD1B;AAFR;AAFD,OAAP;;AASF,SAAK,QAAL;AACE,aAAO;AACLH,QAAAA,IAAI,EAAE,IADD;AAELC,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAMF;AACE,aAAOL,KAAP;AA7CJ;AA+CD,CAhDD;;KAAMD,W;AAkDN,eAAeA,WAAf","sourcesContent":["//アクションに応じて状態(state)を更新する仕組み\r\nconst AuthReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_START\":\r\n      return {\r\n        user: null,\r\n        isFetching: true,\r\n        error: false,\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        user: action.payload,\r\n        isFetching: false,\r\n        error: false,\r\n      };\r\n    case \"LOGIN_ERROR\":\r\n      return {\r\n        user: null,\r\n        isFetching: false,\r\n        error: action.payload,\r\n      };\r\n    case \"FOLLOW\":\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          followings: [...state.user.following, action.payload],\r\n        },\r\n      };\r\n    case \"UNFOLLOW\":\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          followings: state.user.followings.filter(\r\n            (following) => following !== action.payload\r\n          ),\r\n        },\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        user: null,\r\n        isFetching: false,\r\n        error: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AuthReducer;\r\n"]},"metadata":{},"sourceType":"module"}