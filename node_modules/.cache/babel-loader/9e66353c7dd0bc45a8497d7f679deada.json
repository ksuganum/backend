{"ast":null,"code":"var _jsxFileName = \"/Users/kiichirosuganuma/Desktop/dev/real-sns/frontend/src/components/timeline/Timeline.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./Timeline.css\";\nimport Share from \"../share/Share\";\nimport Post from \"../post/Post\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timeline(_ref) {\n  _s();\n\n  let {\n    username,\n    gridView = false,\n    showShare = true\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null); // エラーステートの追加\n\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        console.log(\"Fetching posts for:\", username || user._id); // デバッグ用ログ\n\n        const response = username ? // ? await axios.get(`/api/posts/profile/${username}`)\n        // : await axios.get(`/api/posts/timeline/${user._id}`);\n        await axios.get(`/posts/profile/${username}`) : await axios.get(`/posts/timeline/${user._id}`);\n        console.log(\"Posts fetched:\", response.data); // デバッグ用ログ\n\n        setPosts(response.data);\n        setError(null);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error.response ? error.response.data : error.message);\n        setError(\"Failed to fetch posts.\");\n      }\n    };\n\n    if (username || user && user._id) {\n      fetchPosts();\n    }\n  }, [username, user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `timelineWrapper ${gridView ? \"gridView\" : \"\"}`,\n      children: [showShare && /*#__PURE__*/_jsxDEV(Share, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 23\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) // エラーメッセージ表示\n      : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postWrapper\",\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Timeline, \"TIxGVRzfUPNFDru6SyFc/97pNTc=\");\n\n_c = Timeline;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"sources":["/Users/kiichirosuganuma/Desktop/dev/real-sns/frontend/src/components/timeline/Timeline.jsx"],"names":["React","useContext","useEffect","useState","Share","Post","axios","AuthContext","Timeline","username","gridView","showShare","posts","setPosts","error","setError","user","fetchPosts","console","log","_id","response","get","data","message","map","post"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAEA,eAAe,SAASC,QAAT,OAIZ;AAAA;;AAAA,MAJ8B;AAC/BC,IAAAA,QAD+B;AAE/BC,IAAAA,QAAQ,GAAG,KAFoB;AAG/BC,IAAAA,SAAS,GAAG;AAHmB,GAI9B;AACD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC,CAFC,CAEyC;;AAC1C,QAAM;AAAEa,IAAAA;AAAF,MAAWf,UAAU,CAACM,WAAD,CAA3B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,UAAU,GAAG,YAAY;AAC7B,UAAI;AACFC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCV,QAAQ,IAAIO,IAAI,CAACI,GAApD,EADE,CACwD;;AAC1D,cAAMC,QAAQ,GAAGZ,QAAQ,GACrB;AACA;AACA,cAAMH,KAAK,CAACgB,GAAN,CAAW,kBAAiBb,QAAS,EAArC,CAHe,GAIrB,MAAMH,KAAK,CAACgB,GAAN,CAAW,mBAAkBN,IAAI,CAACI,GAAI,EAAtC,CAJV;AAKAF,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,QAAQ,CAACE,IAAvC,EAPE,CAO4C;;AAC9CV,QAAAA,QAAQ,CAACQ,QAAQ,CAACE,IAAV,CAAR;AACAR,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAVD,CAUE,OAAOD,KAAP,EAAc;AACdI,QAAAA,OAAO,CAACJ,KAAR,CACE,uBADF,EAEEA,KAAK,CAACO,QAAN,GAAiBP,KAAK,CAACO,QAAN,CAAeE,IAAhC,GAAuCT,KAAK,CAACU,OAF/C;AAIAT,QAAAA,QAAQ,CAAC,wBAAD,CAAR;AACD;AACF,KAlBD;;AAoBA,QAAIN,QAAQ,IAAKO,IAAI,IAAIA,IAAI,CAACI,GAA9B,EAAoC;AAClCH,MAAAA,UAAU;AACX;AACF,GAxBQ,EAwBN,CAACR,QAAD,EAAWO,IAAX,CAxBM,CAAT;AA0BA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAG,mBAAkBN,QAAQ,GAAG,UAAH,GAAgB,EAAG,EAA9D;AAAA,iBACGC,SAAS,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADhB,EAEGG,KAAK,gBACJ;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA,cADI,CACiC;AADjC,QAGJF,KAAK,CAACa,GAAN,CAAWC,IAAD,iBACR;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,SAAkCA,IAAI,CAACN,GAAvC;AAAA;AAAA;AAAA;AAAA,cADF,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAnDuBZ,Q;;KAAAA,Q","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport \"./Timeline.css\";\nimport Share from \"../share/Share\";\nimport Post from \"../post/Post\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nexport default function Timeline({\n  username,\n  gridView = false,\n  showShare = true,\n}) {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null); // エラーステートの追加\n  const { user } = useContext(AuthContext);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        console.log(\"Fetching posts for:\", username || user._id); // デバッグ用ログ\n        const response = username\n          ? // ? await axios.get(`/api/posts/profile/${username}`)\n            // : await axios.get(`/api/posts/timeline/${user._id}`);\n            await axios.get(`/posts/profile/${username}`)\n          : await axios.get(`/posts/timeline/${user._id}`);\n        console.log(\"Posts fetched:\", response.data); // デバッグ用ログ\n        setPosts(response.data);\n        setError(null);\n      } catch (error) {\n        console.error(\n          \"Error fetching posts:\",\n          error.response ? error.response.data : error.message\n        );\n        setError(\"Failed to fetch posts.\");\n      }\n    };\n\n    if (username || (user && user._id)) {\n      fetchPosts();\n    }\n  }, [username, user]);\n\n  return (\n    <div className=\"timeline\">\n      <div className={`timelineWrapper ${gridView ? \"gridView\" : \"\"}`}>\n        {showShare && <Share />}\n        {error ? (\n          <div className=\"error\">{error}</div> // エラーメッセージ表示\n        ) : (\n          posts.map((post) => (\n            <div className=\"postWrapper\" key={post._id}>\n              <Post post={post} />\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}